/// <reference types="node" />
import type { ListenOptions } from 'net';
import { ServerOptions } from 'https';
import { URL } from 'url';
import debug from 'debug';
export interface PortalServerProps {
    listenOpts?: ListenOptions;
    serverOpts?: ServerOptions;
    webPortalBaseUrl: URL;
    debug: debug.Debugger;
}
export interface HostPortalParams {
    wsUrl: string;
    targetId: string;
}
export declare class PortalServer {
    private server?;
    private openPortals;
    private targetIdProxyMap;
    private listenOpts?;
    private serverOpts;
    private webPortalBaseUrl;
    private app;
    private debug;
    private router;
    private basePath;
    constructor(props: PortalServerProps);
    private proxyLogger;
    private upgradeHandler;
    private openServer;
    private closeServer;
    hostPortal(params: HostPortalParams): Promise<string>;
    closePortal(targetId: string): Promise<void>;
    hasOpenPortal(targetId: string): boolean;
}

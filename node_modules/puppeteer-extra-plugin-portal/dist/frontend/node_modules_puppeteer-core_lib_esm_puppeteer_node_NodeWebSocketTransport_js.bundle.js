(self["webpackChunkpuppeteer_extra_plugin_portal_frontend"] = self["webpackChunkpuppeteer_extra_plugin_portal_frontend"] || []).push([["node_modules_puppeteer-core_lib_esm_puppeteer_node_NodeWebSocketTransport_js"],{

/***/ "./node_modules/puppeteer-core/lib/esm/puppeteer/node/NodeWebSocketTransport.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/puppeteer-core/lib/esm/puppeteer/node/NodeWebSocketTransport.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeWebSocketTransport": () => (/* binding */ NodeWebSocketTransport)
/* harmony export */ });
/* harmony import */ var ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ws */ "./node_modules/ws/browser.js");
/* harmony import */ var ws__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ws__WEBPACK_IMPORTED_MODULE_0__);

class NodeWebSocketTransport {
    constructor(ws) {
        this._ws = ws;
        this._ws.addEventListener('message', (event) => {
            if (this.onmessage)
                this.onmessage.call(null, event.data);
        });
        this._ws.addEventListener('close', () => {
            if (this.onclose)
                this.onclose.call(null);
        });
        // Silently ignore all errors - we don't know what to do with them.
        this._ws.addEventListener('error', () => { });
        this.onmessage = null;
        this.onclose = null;
    }
    static create(url) {
        return new Promise((resolve, reject) => {
            const ws = new (ws__WEBPACK_IMPORTED_MODULE_0___default())(url, [], {
                perMessageDeflate: false,
                maxPayload: 256 * 1024 * 1024, // 256Mb
            });
            ws.addEventListener('open', () => resolve(new NodeWebSocketTransport(ws)));
            ws.addEventListener('error', reject);
        });
    }
    send(message) {
        this._ws.send(message);
    }
    close() {
        this._ws.close();
    }
}
//# sourceMappingURL=NodeWebSocketTransport.js.map

/***/ }),

/***/ "./node_modules/ws/browser.js":
/*!************************************!*\
  !*** ./node_modules/ws/browser.js ***!
  \************************************/
/***/ ((module) => {

"use strict";


module.exports = function () {
  throw new Error(
    'ws does not work in the browser. Browser clients must use the native ' +
      'WebSocket object'
  );
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wdXBwZXRlZXItZXh0cmEtcGx1Z2luLXBvcnRhbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9wdXBwZXRlZXItY29yZS9saWIvZXNtL3B1cHBldGVlci9ub2RlL05vZGVXZWJTb2NrZXRUcmFuc3BvcnQuanMiLCJ3ZWJwYWNrOi8vcHVwcGV0ZWVyLWV4dHJhLXBsdWdpbi1wb3J0YWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd3MvYnJvd3Nlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBK0I7QUFDeEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtEQUFrRCxFQUFFO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkNBQWE7QUFDeEM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRDs7Ozs7Ozs7Ozs7QUNsQ2E7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Im5vZGVfbW9kdWxlc19wdXBwZXRlZXItY29yZV9saWJfZXNtX3B1cHBldGVlcl9ub2RlX05vZGVXZWJTb2NrZXRUcmFuc3BvcnRfanMuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGVXZWJTb2NrZXQgZnJvbSAnd3MnO1xuZXhwb3J0IGNsYXNzIE5vZGVXZWJTb2NrZXRUcmFuc3BvcnQge1xuICAgIGNvbnN0cnVjdG9yKHdzKSB7XG4gICAgICAgIHRoaXMuX3dzID0gd3M7XG4gICAgICAgIHRoaXMuX3dzLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9ubWVzc2FnZSlcbiAgICAgICAgICAgICAgICB0aGlzLm9ubWVzc2FnZS5jYWxsKG51bGwsIGV2ZW50LmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fd3MuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5vbmNsb3NlKVxuICAgICAgICAgICAgICAgIHRoaXMub25jbG9zZS5jYWxsKG51bGwpO1xuICAgICAgICB9KTtcbiAgICAgICAgLy8gU2lsZW50bHkgaWdub3JlIGFsbCBlcnJvcnMgLSB3ZSBkb24ndCBrbm93IHdoYXQgdG8gZG8gd2l0aCB0aGVtLlxuICAgICAgICB0aGlzLl93cy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsICgpID0+IHsgfSk7XG4gICAgICAgIHRoaXMub25tZXNzYWdlID0gbnVsbDtcbiAgICAgICAgdGhpcy5vbmNsb3NlID0gbnVsbDtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZSh1cmwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHdzID0gbmV3IE5vZGVXZWJTb2NrZXQodXJsLCBbXSwge1xuICAgICAgICAgICAgICAgIHBlck1lc3NhZ2VEZWZsYXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtYXhQYXlsb2FkOiAyNTYgKiAxMDI0ICogMTAyNCwgLy8gMjU2TWJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgd3MuYWRkRXZlbnRMaXN0ZW5lcignb3BlbicsICgpID0+IHJlc29sdmUobmV3IE5vZGVXZWJTb2NrZXRUcmFuc3BvcnQod3MpKSk7XG4gICAgICAgICAgICB3cy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZW5kKG1lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy5fd3Muc2VuZChtZXNzYWdlKTtcbiAgICB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuX3dzLmNsb3NlKCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9kZVdlYlNvY2tldFRyYW5zcG9ydC5qcy5tYXAiLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ3dzIGRvZXMgbm90IHdvcmsgaW4gdGhlIGJyb3dzZXIuIEJyb3dzZXIgY2xpZW50cyBtdXN0IHVzZSB0aGUgbmF0aXZlICcgK1xuICAgICAgJ1dlYlNvY2tldCBvYmplY3QnXG4gICk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==